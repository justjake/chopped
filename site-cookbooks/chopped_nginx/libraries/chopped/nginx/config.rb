module Chopped
  module Nginx
    module Config
      INDENT = '  '
      NEWLINE = "\n"

      def self.indent(ast, level = 0)
        final_lines = []
        ast.each do |item|
          if item.is_a? Enumerable
            final_lines.concat(indent(item, level + 1))
          else
            final_lines << INDENT * level + item.to_s
          end
        end
        final_lines
      end

      # meat and potatoes.
      # generate an nginx config file from a ruby data structure made out of
      # the classes in Chopped::Nginx::AST
      def self.stringify(tree)
        array = tree._render
        lines = indent(array, 0)
        lines.join(NEWLINE) + NEWLINE
      end

      # A domain-specific language function that renders a complete config file
      # string, including a warning that the config was generated by Chef.
      # TODO rename
      def self.config(&block)
        cfg = AST::MainContext.new(&block)
        cfg.children.unshift(AST::Comment.new('Beware: manual edits will be overwritten by future Chef runs.'))
        cfg.children.unshift(AST::Comment.new('This config was generated by Chef.'))
        stringify(cfg)
      end
    end # end Config
  end
end
